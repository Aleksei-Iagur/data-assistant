<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"                                             
             xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="ShareGISData.Dockpane1View"                                             
             mc:Ignorable="d" MinHeight="300" MinWidth="280" d:DesignHeight="500" d:DesignWidth="480">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ArcGIS.Desktop.Framework;component\Themes\Default.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <TabControl x:Name="DataAssistantTab">
        <TabControl.Resources>
            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid Name="Panel">
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2" TextElement.FontSize="18" TextElement.FontFamily="Trebuchet MS"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="TextElement.Foreground" TargetName="Panel" Value="Blue"/>
                                    
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Panel" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </TabControl.Resources>
        <TabItem x:Name="FileTab" Header="File" BorderThickness="1" IsSelected="True">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto" 
          MinHeight="400" MinWidth="300" x:Name="FileGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="65"/>
                    <RowDefinition Height="65"/>
                    <RowDefinition Height="65"/>
                    <RowDefinition Height="130"/>
                    <RowDefinition Height="65*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <StackPanel x:Name="FileStack" Grid.Row="0" IsEnabled="True">
                    <Label x:Name="FileLabel" Margin="0,5,5,0" Content="Source-Target Configuration File" VerticalAlignment="Top"/>
                    <TextBox x:Name="FileName" HorizontalAlignment="Stretch" Margin="5,5,80,5" TextWrapping="NoWrap"  
                 Text="" TextChanged="FileName_TextChanged" VerticalAlignment="Top"/>
                    <Button x:Name="SelectButton" Content="Select..." HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5,-27,5,5" Width="70" Click="SelectButton_Click"/>
                </StackPanel>

                <StackPanel x:Name="SourceStack" Grid.Row="1" IsEnabled="False" Visibility="Hidden">
                    <Label x:Name="SourceLabel" Margin="0,5,5,0" Content="Source Layer" VerticalAlignment="Top"/>
                    <TextBox x:Name="SourceLayer" HorizontalAlignment="Stretch" Margin="5,5,80,5" TextWrapping="NoWrap"  
                 Text="" VerticalAlignment="Top"  TextChanged="SourceLayer_TextChanged" />
                    <Button x:Name="SourceButton" Content="Source..." Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5,-27,5,5" Width="70" Click="SourceButton_Click"/>
                </StackPanel>

                <StackPanel x:Name="TargetStack" Grid.Row="2" IsEnabled="False" Visibility="Hidden">
                <Label x:Name="TargetLabel" Margin="0,5,5,0" Content="Target Layer" VerticalAlignment="Top"/>
                <TextBox x:Name="TargetLayer" HorizontalAlignment="Stretch" Margin="5,5,80,5" TextWrapping="NoWrap" 
                 Text="" VerticalAlignment="Top" TextChanged="TargetLayer_TextChanged"/>
                <Button x:Name="TargetButton" Content="Target..." HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5,-27,5,5" Width="70" Click="TargetButton_Click"/>
                </StackPanel>

                <StackPanel x:Name="ReplaceStack" Grid.Row="3" IsEnabled="False" Visibility="Hidden">
                <Label x:Name="ReplaceLabel" Margin="0,5,5,0" Content="'Replace By Field' Settings" VerticalAlignment="Top"/>
                <ComboBox x:Name="ReplaceField" MinWidth="100" ItemsSource="{Binding XPath=//TargetField/@Name}" Margin="5,5,5,5"  VerticalAlignment="Top" Width="200" HorizontalAlignment="Left"
                          SelectionChanged="ReplaceField_SelectionChanged"/>
                    <ComboBox x:Name="ReplaceOperator" MinWidth="20"  Margin="5,5,5,5"  VerticalAlignment="Top" Width="50" HorizontalAlignment="Left"
                          SelectionChanged="ReplaceOperator_SelectionChanged" >
                    <ComboBoxItem Content="=" ToolTip="Equal To"/>
                    <ComboBoxItem Content="!=" ToolTip="Not Equal To"/>
                    <ComboBoxItem Content="Like" ToolTip="Like"/>
                    <ComboBoxItem Content="Where" ToolTip="Where Expression"/>
                </ComboBox>
                <TextBox x:Name="ReplaceValue" HorizontalAlignment="Left" Margin="5,5,5,5" TextWrapping="NoWrap"  
                 Text="" MinWidth="100" Width="110" VerticalAlignment="Top" TextChanged="ReplaceValue_SelectionChanged"/>
                </StackPanel>
                
                <StackPanel x:Name="AutomatchStack" Grid.Row="4" IsEnabled="True" Visibility="Hidden">
                    <Label x:Name="AutomatchLabel" Margin="0,5,5,0" Content="Automatch Settings" VerticalAlignment="Top" ToolTip="Automatch remembers your configuration patterns and applies to new field settings"/>
                    <Button x:Name="UpdateAutomatchButton" Content="Update Automatch..." HorizontalAlignment="left" VerticalAlignment="Bottom" Margin="5,5,5,5" Click="UpdateAutomatchButton_Click" ToolTip="Use the settings in your current configuration file to update Automatch values" Width="125"/>
                    <Button x:Name="ResetAutomatchButton" Content="Reset Automatch..." HorizontalAlignment="left" VerticalAlignment="Bottom" Margin="5,5,5,5" Click="ResetAutomatchButton_Click" ToolTip="This button will clear all saved Automatch values" Width="125"/>
                </StackPanel>
            </Grid>
        </TabItem>
        <TabItem x:Name="FieldsTab" Header="Fields" BorderThickness="1">

            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" Width="Auto" MinHeight="400" MinWidth="300" 
                  x:Name="FieldsGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="75"/>
                    <RowDefinition Height="220*"/>
                    <RowDefinition Height="170"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="320"/>
                    <ColumnDefinition Width="160*"/>
                </Grid.ColumnDefinitions>

                <DataGrid x:Name="FieldGrid" Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" ItemsSource="{Binding XPath=/SourceTargetMatrix/Fields/Field}" 
                  Width="Auto" MinHeight="250" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="200" 
                  AutoGenerateColumns="False" AutoGeneratingColumn="FieldGrid_AutoGeneratingColumn"
                  CanUserResizeColumns="True" SelectedCellsChanged="FieldGrid_Selected" 
                      ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                      ScrollViewer.CanContentScroll="True" 
                      SelectionChanged="FieldGrid_SelectionChanged" Margin="5,5,5,5">
                    <DataGrid.DataContext>
                        <XmlDataProvider Source="ConfigData.xml" XPath="/SourceTargetMatrix/Fields/Field"/>
                    </DataGrid.DataContext>
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="TargetFieldName" Binding="{Binding XPath=TargetName}" 
                                    ClipboardContentBinding="{x:Null}" Header="Target" MinWidth="100"/>

                        <DataGridTemplateColumn x:Name="aSourceFieldName" MinWidth="100" Width="*" Header="Source">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ComboBox x:Name="SourceField" ItemsSource="{Binding XPath=//SourceField/@Name}" SelectedValue="{Binding XPath=SourceName}" SelectionChanged="SourceField_SelectionChanged" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--
SelectionChanged="SourceSelectionChanged"
                <DataGridComboBoxColumn x:Name="aSourceField"  Header="Source" MinWidth="100" Width="*">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding XPath=SourceName}"/>
                            <Setter Property="SelectedValue" Value="{Binding XPath=SourceName}"/>
                            <Setter Property="IsReadOnly" Value="True"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>

                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding XPath=//SourceField/Name}"/>
                            <EventSetter Event="SelectionChanged" Handler="SourceSelectionChanged" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>-->
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="0" x:Name="Methods" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" Visibility="Visible" IsEnabled="False">
                    <Label x:Name="lbl1" Content="Method" Margin="5,5,5,5"/>
                    <ComboBox x:Name="comboMethod"  Margin="5,5,5,5" SelectedIndex="0" SelectionChanged="comboMethod_SelectionChanged" >
                        <ComboBoxItem Content="None" ToolTip="Set Target Values to null."/>
                        <ComboBoxItem Content="Copy" ToolTip="Copy Source Field values to Target Fields."/>
                        <ComboBoxItem Content="DefaultValue" ToolTip="Target Field values will be set to a constant value."/>
                        <ComboBoxItem Content="ValueMap" ToolTip="Set Target values based on Source values."/>
                        <ComboBoxItem Content="ChangeCase" ToolTip="Change the case of the source text strings."/>
                        <ComboBoxItem Content="Concatenate" ToolTip="Concatenate Source values into a string."/>
                        <ComboBoxItem Content="Left" ToolTip="Extract a number of characters from the left."/>
                        <ComboBoxItem Content="Right" ToolTip="Extract a number of characters from the right."/>
                        <ComboBoxItem Content="Substring" ToolTip="Extract a set of characters from a string."/>
                        <ComboBoxItem Content="Split" ToolTip="Split a string into parts and use one part."/>
                        <ComboBoxItem Content="ConditionalValue" ToolTip="Construct an If/Else Statement."/>
                        <ComboBoxItem Content="Expression" ToolTip="Enter any Python Expression."/>
                    </ComboBox>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method0" Visibility="Hidden">
                    <TextBlock VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="5,5,5,0" LineStackingStrategy="BlockLineHeight" TextWrapping="Wrap"><Run Text="Set Target Values to null."/></TextBlock>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method1" Visibility="Hidden">
                    <TextBlock VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="5,5,0,0"  LineStackingStrategy="BlockLineHeight" TextWrapping="Wrap">
                        <Run Text="Copy Source Field values to Target Fields."/></TextBlock>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method2" Visibility="Hidden">
                    <Label Content="Default Value" Margin="5,5,5,5"/>
                    <TextBox x:Name="Method2Value" Margin="5,0,5,0" Text="" ToolTip="Default Value to Set"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method3" Visibility="Hidden">
                    <Label Content="Value Mapping" Margin="5,5,5,5"/>
                    <Button x:Name="ValueMapAdd" Content="+" Width="20" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="35,15,5,5" Click="ValueMapAdd_Click"/>
                    <Button x:Name="ValueMapRemove" Content="-" Width="20" IsEnabled="False" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5,-35,25,5" Click="ValueMapRemove_Click"/>

                    <DataGrid x:Name="Method3Grid" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"  Margin="5,5,5,5" 
                      AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True"  CanUserResizeColumns="True" CanUserSortColumns="True" ScrollViewer.CanContentScroll="True" 
                      Height="Auto" Width="Auto" MinWidth="150">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="Method3Sources" MinWidth="75" Header="Sources">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBox x:Name="Method3Source" Text="{Binding Path=Source}" TextChanged="Method3Source_TextChanged"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn x:Name="Method3Targets" MinWidth="75" Header="Targets" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBox x:Name="Method3Target" Text="{Binding Path=Target}" TextChanged="Method3Target_TextChanged"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Content="Otherwise:" Margin="5,5,5,5"/>
                    <TextBox x:Name="Method3Otherwise" Margin="5,5,5,5" ToolTip="Otherwise set to value"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method4" Visibility="Hidden">
                    <Label Content="String Function" Margin="5,5,5,5"/>
                    <ComboBox x:Name="Method4Combo"  Margin="5,5,5,5" SelectedIndex="0" >
                        <ComboBoxItem Content="Uppercase"/>
                        <ComboBoxItem Content="Lowercase"/>
                        <ComboBoxItem Content="Title"/>
                        <ComboBoxItem Content="Capitalize"/>
                    </ComboBox>
                    <!-- <Button x:Name="Method4Preview" Content="Preview Result..." ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,15,5,5" MinWidth="60" Click="Method4Preview_Click"/>-->
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method5" Visibility="Hidden" ScrollViewer.CanContentScroll="True">
                    <Label Content="Select Fields" Margin="5,5,5,5"/>
                    <Button x:Name="Method5ClearAll" Content="Clear" IsEnabled="False"  Width="60" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="5,5,5,5" Click="Method5ClearAll_Click"/>
                    <!--<Button x:Name="ConcatNone" Content="None" Width="60" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5,-35,15,5" Click="ConcatNone_Click"/>-->
                    <DataGrid x:Name="Method5Grid" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"  Margin="5,5,5,5" 
                      AutoGenerateColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False" ScrollViewer.CanContentScroll="True" 
                      Height="150" Width="Auto" SelectionChanged="Method5Grid_SelectionChanged">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="Method5Checked" MinWidth="20" Header="Include">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <CheckBox x:Name="Method5Check" VerticalAlignment="Center"  HorizontalAlignment="Center" IsChecked="{Binding Path=Checked}" Checked="Method5Check_Checked" Unchecked="Method5Check_Checked"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="Method5Field" Header="Fields" Binding="{Binding Path=Name}" MinWidth="100" IsReadOnly="True" Width="*"/>
                            <!--                    <DataGridTemplateColumn x:Name="Method5Sequence" MinWidth="30" Header="Sequence" Visibility="Hidden">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBox x:Name="Method5Seq" Text="{Binding Path=Sequence}"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Content="Separate With" Margin="5,5,5,5"/>
                    <TextBox x:Name="Method5Value" Margin="5,0,5,5" Text="-" ToolTip="Separate values with a string (optional)" TextChanged="Method5Value_TextChanged"/>
                    <!-- <Button x:Name="Method5Preview" Content="Preview Result..." ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,5,5,5" MinWidth="60" Click="Method5Preview_Click"/>-->
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method6" Visibility="Hidden">
                    <TextBox Text="{Binding ElementName=Method6Slider, Path=Value}" DockPanel.Dock="Right" TextAlignment="Right" Width="40" />
                    <Slider x:Name="Method6Slider" Minimum="0" Maximum="20" Margin="5,10,5,5" Value="2" SmallChange="1" Ticks="{x:Null}" Cursor="None" ToolTip="Number of Left Characters" AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True" TickPlacement="TopLeft"/>
                    <!--                     <Button x:Name="Method6Preview" Content="Preview Result..." ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,15,5,5" MinWidth="60" Click="Method6Preview_Click"/>-->
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method7" Visibility="Hidden">
                    <TextBox Text="{Binding ElementName=Method7Slider, Path=Value}" DockPanel.Dock="Right" TextAlignment="Right" Width="40" />
                    <Slider x:Name="Method7Slider" IsDirectionReversed="True" Maximum="20" Minimum="0" Margin="5,10,5,5" Value="18" SmallChange="1" Cursor="None" ToolTip="Number of Right Characters" AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True" TickPlacement="TopLeft"/>
                    <!--<Button x:Name="Method7Preview" Content="Preview Result..." ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,15,5,5" MinWidth="60" Click="Method7Preview_Click"/>-->
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method8" Visibility="Hidden">

                    <Label Content="Start at position" Margin="5,5,5,5"/>
                    <TextBox Text="{Binding ElementName=Method81Slider, Path=Value}" DockPanel.Dock="Right" TextAlignment="Right" Width="40" />
                    <Slider x:Name="Method81Slider" Margin="5,10,5,5" Value="0" SmallChange="1" Ticks="{x:Null}" Cursor="None" ToolTip="Position to start at" AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True"/>
                    <Label Content="Number of characters" Margin="5,15,5,5"/>
                    <TextBox Text="{Binding ElementName=Method82Slider, Path=Value}" DockPanel.Dock="Right" TextAlignment="Right" Width="40" />
                    <Slider x:Name="Method82Slider" Margin="5,10,5,5" Value="9" SmallChange="1" Ticks="{x:Null}" Cursor="None" ToolTip="Number of Characters to extract" AutoToolTipPlacement="TopLeft" IsSnapToTickEnabled="True"/>
                    <!-- <Button x:Name="Method8Preview" Content="Preview Result..." ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,15,5,5" MinWidth="60" Click="Method8Preview_Click"/>-->
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method9" Visibility="Hidden">
                    <Label Content="Character to split with" Margin="5,5,5,5"/>
                    <TextBox x:Name="Method91Value" Margin="5,0,5,0" Text="' '" ToolTip="String value to split the string with"/>
                    <Label Content="Part Number to use" Margin="5,5,5,5"/>
                    <TextBox x:Name="Method92Value" Margin="5,0,5,0" Text="0" ToolTip="Each part will have a number starting with 0"/>
                    <!-- <Button x:Name="Method9Preview" Content="Preview Result..." ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,15,5,5" MinWidth="60" Click="Method9Preview_Click"/>-->
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method10" Visibility="Hidden">
                    <Label x:Name="Method10Label" Content="If value is:" Margin="5,5,5,5"/>
                    <ComboBox x:Name="Method10Value" MinWidth="20"  Margin="5,5,5,5"  VerticalAlignment="Top" Width="50" HorizontalAlignment="Left">
                        <ComboBoxItem Content="==" ToolTip="Equal To"/>
                        <ComboBoxItem Content="!=" ToolTip="Not Equal To"/>
                        <ComboBoxItem Content="&lt;" ToolTip="Less Than"/>
                        <ComboBoxItem Content="&gt;" ToolTip="Greater Than"/>
                    </ComboBox>
                    <TextBox x:Name="Method101Value" Margin="65,-30,5,0" MinWidth="70" Text="" ToolTip="Condition to test" HorizontalAlignment="Left"/>
                    <Label Content="Then set value to:" Margin="5,5,5,5"/>
                    <TextBox x:Name="Method102Value" Margin="5,0,5,0" Text="" ToolTip="Value to set"/>
                    <Label Content="Else:" Margin="5,5,5,5"/>
                    <TextBox x:Name="Method103Value" Margin="5,0,5,0" Text="" ToolTip="Else set to"/>
                    <!--<Button x:Name="Method10Preview" Content="Preview Result..." ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,15,5,5" MinWidth="60" Click="Method10Preview_Click"/>-->
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="5,5,5,5" Grid.Row="1" x:Name="Method11" Visibility="Hidden">
                    <Label Content="Expression" Margin="5,5,5,5"/>
                    <TextBox x:Name="Method11Value" Margin="5,0,5,5" Text="" ToolTip="Enter the expression" Height="100"/>
                    <!-- <Button x:Name="Method11Preview" Content="Preview Result..." ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,15,5,5" MinWidth="60" Click="Method11Preview_Click"/>-->
                </StackPanel>

                <StackPanel x:Name="MethodControls" Grid.Column="1" Margin="5,5,5,5" Grid.Row="2" Visibility="Visible" VerticalAlignment="Bottom" MinWidth="100">
                    <Button x:Name="MethodPanelApply" Content="Apply" Width="50"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="-75,5,5,5" Click="MethodPanelApply_Click"/>
                    <Button x:Name="MethodPanelCancel" Content="Cancel" Width="50" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="75,-50,5,5" Click="MethodPanelCancel_Click"/>
                    <!--<Label Content="Preview:" VerticalAlignment="Stretch" MouseDown="ClickLabel" ToolTip="Preview the result"/>-->
                    <!--<Button x:Name="PreviewButton" Content="Preview" ToolTip="Preview Result" HorizontalAlignment="Left" Margin="5,15,5,5" MinWidth="60" Click="ClickPreviewButton"/>-->
                    <CheckBox x:Name="PreviewCheckBox" Margin="5,10,5,5" Content="Preview Results" Checked="PreviewCheckBox_Checked" Unchecked="PreviewCheckBox_Checked" IsChecked="False"/>
                    <DataGrid x:Name="PreviewGrid" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"  
                      AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" ScrollViewer.CanContentScroll="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                      Height="0" Width="Auto" SelectionChanged="Method5Grid_SelectionChanged" Margin="0,0,0,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="PreviewField" Header="Values" Binding="{Binding Path=Value}" MinWidth="100" IsReadOnly="True" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <!--                    <Border BorderBrush="LightGray" BorderThickness="1" Margin="5,5,10,5">
                        <TextBlock x:Name="PreviewText" Margin="5,5,10,5" Text="This is a test of the display for this thing" TextWrapping="WrapWithOverflow" Height="80" HorizontalAlignment="Stretch"></TextBlock>
                    </Border>
-->
                </StackPanel>

            </Grid>
        </TabItem>
    </TabControl>
</UserControl>
